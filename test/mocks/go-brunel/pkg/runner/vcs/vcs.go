// Code generated by MockGen. DO NOT EDIT.
// Source: go-brunel/internal/pkg/runner/vcs (interfaces: VCS)

// Package vcs is a generated GoMock package.
package vcs

import (
	gomock "github.com/golang/mock/gomock"
	vcs "go-brunel/internal/pkg/runner/vcs"
	reflect "reflect"
)

// MockVCS is a mock of VCS interface
type MockVCS struct {
	ctrl     *gomock.Controller
	recorder *MockVCSMockRecorder
}

// MockVCSMockRecorder is the mock recorder for MockVCS
type MockVCSMockRecorder struct {
	mock *MockVCS
}

// NewMockVCS creates a new mock instance
func NewMockVCS(ctrl *gomock.Controller) *MockVCS {
	mock := &MockVCS{ctrl: ctrl}
	mock.recorder = &MockVCSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVCS) EXPECT() *MockVCSMockRecorder {
	return m.recorder
}

// Clone mocks base method
func (m *MockVCS) Clone(arg0 vcs.Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Clone", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Clone indicates an expected call of Clone
func (mr *MockVCSMockRecorder) Clone(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clone", reflect.TypeOf((*MockVCS)(nil).Clone), arg0)
}
