version: '3.1'

services:

  server:
    build: ./
    restart: always
    ports:
      - 0.0.0.0:8081:80
      - 0.0.0.0:8886:8885
    environment:
      BRUNEL_LISTEN: "0.0.0.0:80"
      #
      # View the README for instructions on configuring these settings
      #
      # BRUNEL_OAUTH_GITLAB_KEY: <oauth key>
      # BRUNEL_OAUTH_GITLAB_SECRET: <oauth secret>
      # BRUNEL_OAUTH_GITHUB_KEY: <oauth key>
      # BRUNEL_OAUTH_GITHUB_SECRET: <oauth secret>
      BRUNEL_MONGO_URI: mongodb://root:example@mongo:27017
      BRUNEL_MONGO_DB: brunel
      BRUNEL_JWT_SECRET: thisIsASecret
      BRUNEL_SERVER_NAME: http://localhost:8081
      BRUNEL_REMOTE_LISTEN: 0.0.0.0:8885
      BRUNEL_REMOTE_CREDENTIALS_CERT: |
        <cert goes here>
      BRUNEL_REMOTE_CREDENTIALS_KEY: |
        <key goes here>

  runner:
    build:
       context: .
       dockerfile: ./Dockerfile.runner
    restart: always
    environment:
      BRUNEL_RUNTIME: docker
      BRUNEL_REMOTE_ENDPOINT: server:8885
      BRUNEL_REMOTE_CREDENTIALS_CERT: |
        <cert goes here>
      BRUNEL_REMOTE_CREDENTIALS_KEY: |
        <key goes here>
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

  mongo:
    image: mongo:4.2.1-bionic
    restart: always
    environment:
      MONGO_INITDB_DATABASE: brunel
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 0.0.0.0:27017:27017

  mongo-express:
    image: mongo-express:0.49
    restart: always
    ports:
    - 0.0.0.0:8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
